{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Modal","props","className","modalName","modalNum","modalDate","modalLike","onClick","제목바꾸기","App","useState","게시글","게시글제목변경","날짜","날짜변경","좋아요","좋아요변경","modal","setModal","inputTitle","inputTitleChange","inputDate","inputDateChange","setA","newSortArray","sort","map","a","i","newLike","좋아요더하기","e","newTitleArray","splice","newDateArray","newLikeArray","게시글삭제","onChange","target","value","type","alert","unshift","게시글추가","newArray","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAAe,I,YC8If,SAASA,EAAMC,GACb,OACA,sBAAKC,UAAU,QAAf,UACF,6BAAKD,EAAME,UAAUF,EAAMG,YAC3B,4BAAIH,EAAMI,UAAUJ,EAAMG,YAC1B,4BAAIH,EAAMK,UAAUL,EAAMG,YAC1B,wBAAQG,QAASN,EAAMO,+BAAvB,+CAKeC,MArJf,WAGE,MAAmBC,mBAAS,CAAC,yCAAY,2CAAzC,mBAEA,GAFA,UAEqBA,mBAAS,CAAC,2BAAQ,qBAAO,0CAA9C,mBAAKC,EAAL,KAAUC,EAAV,KACA,EAAiBF,mBAAS,CAAC,mBAAU,mBAAU,oBAA/C,mBAAKG,EAAL,KAASC,EAAT,KACA,EAAmBJ,mBAAS,CAAC,EAAE,EAAE,IAAjC,mBAAKK,EAAL,KAAUC,EAAV,KACA,EAAwBN,mBAAS,GAAjC,mBAAKO,EAAL,KAAYC,EAAZ,KACA,EAAqCR,mBAAS,IAA9C,mBAAKS,EAAL,KAAiBC,EAAjB,KACA,EAAmCV,mBAAS,IAA5C,mBAAKW,EAAL,KAAgBC,EAAhB,KA0CA,EAAuBZ,mBAAS,GAAhC,mBAAKN,EAAL,KAAemB,EAAf,KAgCA,OACE,sBAAKrB,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,SACE,sDAGF,wBAAQK,QA5CZ,WACE,IAAIiB,EAAY,YAAOb,GACvBa,EAAaC,OACbb,EAAQY,IAyCN,6EAEAb,EAAIe,KACF,SAASC,EAAEC,GACT,OAAQ,sBAAK1B,UAAU,OAAf,UACN,uBAAMK,QAAU,WAvCxBgB,EAuCyCK,GArCvCV,EADU,GAATD,EACQ,EAEA,IAmCH,UAAwCN,EAAIiB,GAA5C,UACA,uBAAMrB,QAAS,YAxDzB,SAAgBoB,GACd,IAAIE,EAAO,YAAOd,GAClBc,EAAQF,GAAKE,EAAQF,GAAK,EAC1BX,EAAMa,GAqDsBC,CAAOF,IAA3B,0BAAqCb,EAAIa,MACzC,8BAAIf,EAAGe,GAAP,mBACA,wBAAQrB,QAAS,YAtE3B,SAAewB,GACb,IAAIC,EAAa,YAAOrB,GACxBqB,EAAcC,OAAOF,EAAE,GACvBnB,EAAQoB,GACR,IAAIE,EAAY,YAAOrB,GACvBqB,EAAaD,OAAOF,EAAE,GACtBjB,EAAKoB,GACL,IAAIC,EAAY,YAAOpB,GACvBoB,EAAaF,OAAOF,EAAE,GACtBf,EAAMmB,GA6DwBC,CAAMR,IAA5B,0BACA,yBALiCA,MAUvC,gDACD,uBAAOS,SAAU,SAACN,GAAKX,EAAiBW,EAAEO,OAAOC,QAASC,KAAK,SAD9D,qBAED,uBAAOH,SAAU,SAACN,GAAKT,EAAgBS,EAAEO,OAAOC,QAASC,KAAK,SAF7D,OAGE,wBAAQjC,QAAS,YA/FvB,WACE,GAAiB,IAAdY,GAAiC,IAAbE,EACrBoB,MAAM,6GACL,CACH,IAAIT,EAAa,YAAOrB,GACxBqB,EAAcU,QAAQvB,GACtBP,EAAQoB,GACR,IAAIE,EAAY,YAAOrB,GACvBqB,EAAaQ,QAAQrB,GACrBP,EAAKoB,GACL,IAAIC,EAAY,YAAOpB,GACvBoB,EAAaO,QAAQ,GACrB1B,EAAMmB,IAmFoBQ,IAAtB,6BAoBM,IAAV1B,EAAa,cAACjB,EAAD,CAAOG,UAAaQ,EAAKN,UAAaQ,EAAIP,UAAaS,EAAKX,SAAWA,EAAU,iCA/DhG,WAGE,IAAIwC,EAAQ,YAAOjC,GACnBiC,EAASxC,GAAY,yCACrBQ,EAAQgC,MA0D+G,SCvH5GC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f2a63a3c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n\n  // let posts = '강남 고기 맛집';\n  let [글제목, 글제목변경] = useState(['남자 코트 추천', '강남 우동 맛집']);\n\n  let [게시글, 게시글제목변경] = useState(['하루살이', '재테크', '무서운이야기']);\n  let [날짜, 날짜변경] = useState(['2월 17일', '2월 20일', '3월 4일']);\n  let [좋아요, 좋아요변경] = useState([0,0,0]);\n  let [modal, setModal] = useState(0);\n  let [inputTitle, inputTitleChange] = useState('');\n  let [inputDate, inputDateChange] = useState('');\n \n  function 게시글추가(){\n    if(inputTitle == '' || inputDate == ''){\n      alert('게시물 제목, 날짜를 모두 입력해주세요')\n  }else{\n    var newTitleArray = [...게시글];\n    newTitleArray.unshift(inputTitle)\n    게시글제목변경(newTitleArray);\n    var newDateArray = [...날짜];\n    newDateArray.unshift(inputDate);\n    날짜변경(newDateArray);\n    var newLikeArray = [...좋아요];\n    newLikeArray.unshift(0)\n    좋아요변경(newLikeArray);\n  }\n  }\n\n  function 게시글삭제(e){\n    var newTitleArray = [...게시글];\n    newTitleArray.splice(e,1);\n    게시글제목변경(newTitleArray);\n    var newDateArray = [...날짜];\n    newDateArray.splice(e,1);\n    날짜변경(newDateArray);\n    var newLikeArray = [...좋아요];\n    newLikeArray.splice(e,1);\n    좋아요변경(newLikeArray);\n  }\n\n  function 좋아요더하기(a){\n    var newLike = [...좋아요];\n    newLike[a] = newLike[a] + 1;\n    좋아요변경(newLike);\n  }\n\n  function 게시물가나다정렬(){\n    var newSortArray = [...게시글]\n    newSortArray.sort();\n    게시글제목변경(newSortArray);\n  }\n\n  let [modalNum, setA] = useState(0);\n  function switchModal(num){\n    let newModalNum = modalNum;\n    newModalNum = num;\n    setA(newModalNum);\n    if(modal == 0){\n      setModal(1);\n    }else{\n      setModal(0);\n    }\n  }\n\n  function 제목바꾸기(){\n    \n    //var newArray = 게시글; // 값 공유\n    var newArray = [...게시글]; // ****************DeepCopy******************\n    newArray[modalNum] = '여자 코트 추천';\n    게시글제목변경(newArray)\n  }\n\n  // function Modal(){\n  //   if(modal === 1){\n  //   return<div className=\"modal\">\n  //     <h2>{게시글[a]}</h2>\n  //     <p>{날짜[a]}</p>\n  //     <p>좋아요: {좋아요[a]}</p>\n  //   </div>\n  //   }else{\n  //     return null;\n  //   }\n  // }\n\n  return (\n    <div className=\"App\">\n      <div className=\"black-nav\">\n        <div>개발 Blog</div>\n      </div>\n      {/* <button onClick={ 제목바꾸기 }>글제목바꾸기</button> */}\n      <button onClick={게시물가나다정렬}>게시물 정렬하기(가나다)</button>\n      {\n      게시글.map(\n        function(a,i){\n          return  <div className=\"list\" key={i}>\n            <span onClick={ ()=>{switchModal(i)}} >{게시글[i]}&nbsp;</span>\n            <span onClick={()=>{좋아요더하기(i)}} >👍 {좋아요[i]}</span>\n            <p>{날짜[i]} 발행</p>\n            <button onClick={()=>{게시글삭제(i)}}>삭제</button>\n            <hr />\n          </div>\n        }\n      )\n      }\n      <div>\n  제목 <input onChange={(e)=>{inputTitleChange(e.target.value)}} type='text'></input>&nbsp;\n  날짜 <input onChange={(e)=>{inputDateChange(e.target.value)}} type='text'></input>\n  &nbsp;<button onClick={()=>{게시글추가()}}>추가</button>\n  </div>\n\n    {/* <div className=\"list\">\n      <span onClick={ ()=>{switchModal(0)}} >{게시글[0]}&nbsp;</span>\n      <span onClick={()=>{좋아요더하기(0)}} >👍 {좋아요[0]}</span>\n      <p>{날짜[0]} 발행</p>\n      <hr />\n    </div>\n    <div className=\"list\">\n      <h3 onClick={ ()=>{switchModal(1)}}>{게시글[1] } <span onClick={()=>{좋아요더하기(1)}}  >👍 {좋아요[1]}</span></h3>\n      <p>{날짜[1]} 발행</p>\n      <hr />\n    </div>\n    <div className=\"list\">\n      <h3 onClick={ ()=>{switchModal(2)}}>{게시글[2] } <span onClick={()=>{좋아요더하기(2)}}  >👍 {좋아요[2]}</span> </h3>\n      <p>{날짜[2]} 발행</p>\n      <hr />\n    </div> */}\n    {\n    modal === 1? <Modal modalName = {게시글} modalDate = {날짜} modalLike = {좋아요} modalNum ={modalNum} 제목바꾸기 ={제목바꾸기}></Modal>: null\n    }\n\n    </div>\n\n\n  );\n\n}\n// var modalNum = 0;\n\nfunction Modal(props){\n  return(\n  <div className=\"modal\">\n<h2>{props.modalName[props.modalNum]}</h2>\n<p>{props.modalDate[props.modalNum]}</p>\n<p>{props.modalLike[props.modalNum]}</p>\n<button onClick={props.제목바꾸기}>제목바꾸기</button>\n</div>\n);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}